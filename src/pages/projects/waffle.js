import { Canvas } from "@react-three/fiber"
import { OrbitControls } from "@react-three/drei"
import React from "react"
import Spinner from "../../components/spinner"
import { Suspense } from "react"
import { hexToRGB } from "../../style/theme"
import styled from "styled-components"
import { useGLTF } from "@react-three/drei"

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

function Waffle(props) {
  const { nodes, materials } = useGLTF(
    "https://ik.imagekit.io/5xtlzx2c3y/website/art/3d/meshes/waffle.glb?updatedAt=1693525628231"
  )
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["2-23_08_30_23_28_46_848_0"].geometry}
        material={materials["2-23_08_30_23_28_46_848_0"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["2-23_08_30_23_28_46_848_1"].geometry}
        material={materials["2-23_08_30_23_28_46_848_1"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload("/waffle.glb")

const Wrapper = styled.div`
  padding: 56px 0px 50px 0px;
`

const CanvasColored = styled(Canvas)`
  width: 70% !important;
  height: 50vh !important;
  margin: auto;
  border-radius: 10px;
  background: ${props => hexToRGB(props.theme.medium, 0.2)};

  @media screen and (max-width: 876px) {
    width: 100% !important;
  }
`

export default function ThreeJsObjectPage() {
  return (
    <Wrapper>
      <CanvasColored>
        <ambientLight intensity={1.5} />
        <directionalLight color="white" position={[0, 5, 2]} />
        <directionalLight color="white" position={[0, -5, 2]} />
        <Suspense fallback={null}>
          <Waffle />
        </Suspense>
        <OrbitControls autoRotate />
      </CanvasColored>
    </Wrapper>
  )
}
